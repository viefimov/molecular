import {
  require_baseGet,
  require_hasIn,
  require_isKey,
  require_toKey
} from "./chunk-B4MSVAOU.js";
import {
  require_identity
} from "./chunk-MSI7WFAP.js";
import {
  require_baseIsEqual
} from "./chunk-S65GQZA2.js";
import {
  require_keys
} from "./chunk-JW3YICEQ.js";
import {
  require_Stack
} from "./chunk-YYDUMFFY.js";
import {
  require_isArray
} from "./chunk-HMMCJF55.js";
import {
  require_isObject
} from "./chunk-6EYZEMDY.js";
import {
  __commonJS
} from "./chunk-LK32TJAX.js";

// .yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseIsMatch.js
var require_baseIsMatch = __commonJS({
  ".yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseIsMatch.js"(exports, module) {
    var Stack = require_Stack();
    var baseIsEqual = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length, length = index, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0], objValue = object[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module.exports = baseIsMatch;
  }
});

// .yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_isStrictComparable.js
var require_isStrictComparable = __commonJS({
  ".yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_isStrictComparable.js"(exports, module) {
    var isObject = require_isObject();
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    module.exports = isStrictComparable;
  }
});

// .yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_getMatchData.js
var require_getMatchData = __commonJS({
  ".yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_getMatchData.js"(exports, module) {
    var isStrictComparable = require_isStrictComparable();
    var keys = require_keys();
    function getMatchData(object) {
      var result = keys(object), length = result.length;
      while (length--) {
        var key = result[length], value = object[key];
        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }
    module.exports = getMatchData;
  }
});

// .yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_matchesStrictComparable.js
var require_matchesStrictComparable = __commonJS({
  ".yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_matchesStrictComparable.js"(exports, module) {
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
      };
    }
    module.exports = matchesStrictComparable;
  }
});

// .yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseMatches.js
var require_baseMatches = __commonJS({
  ".yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseMatches.js"(exports, module) {
    var baseIsMatch = require_baseIsMatch();
    var getMatchData = require_getMatchData();
    var matchesStrictComparable = require_matchesStrictComparable();
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    module.exports = baseMatches;
  }
});

// .yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/get.js
var require_get = __commonJS({
  ".yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/get.js"(exports, module) {
    var baseGet = require_baseGet();
    function get(object, path, defaultValue) {
      var result = object == null ? void 0 : baseGet(object, path);
      return result === void 0 ? defaultValue : result;
    }
    module.exports = get;
  }
});

// .yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseMatchesProperty.js
var require_baseMatchesProperty = __commonJS({
  ".yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseMatchesProperty.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    var get = require_get();
    var hasIn = require_hasIn();
    var isKey = require_isKey();
    var isStrictComparable = require_isStrictComparable();
    var matchesStrictComparable = require_matchesStrictComparable();
    var toKey = require_toKey();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    module.exports = baseMatchesProperty;
  }
});

// .yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseProperty.js
var require_baseProperty = __commonJS({
  ".yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseProperty.js"(exports, module) {
    function baseProperty(key) {
      return function(object) {
        return object == null ? void 0 : object[key];
      };
    }
    module.exports = baseProperty;
  }
});

// .yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_basePropertyDeep.js
var require_basePropertyDeep = __commonJS({
  ".yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_basePropertyDeep.js"(exports, module) {
    var baseGet = require_baseGet();
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }
    module.exports = basePropertyDeep;
  }
});

// .yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/property.js
var require_property = __commonJS({
  ".yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/property.js"(exports, module) {
    var baseProperty = require_baseProperty();
    var basePropertyDeep = require_basePropertyDeep();
    var isKey = require_isKey();
    var toKey = require_toKey();
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    module.exports = property;
  }
});

// .yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseIteratee.js
var require_baseIteratee = __commonJS({
  ".yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseIteratee.js"(exports, module) {
    var baseMatches = require_baseMatches();
    var baseMatchesProperty = require_baseMatchesProperty();
    var identity = require_identity();
    var isArray = require_isArray();
    var property = require_property();
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    module.exports = baseIteratee;
  }
});

export {
  require_baseIteratee
};
//# sourceMappingURL=chunk-HD4H5JMK.js.map

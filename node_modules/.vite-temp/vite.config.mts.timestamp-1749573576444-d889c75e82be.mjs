// vite.config.mts
import { defineConfig } from "file:///D:/PROJECT/final-toolset/moleculer-ts/.yarn/__virtual__/vite-virtual-72f683ec2a/0/cache/vite-npm-6.3.5-244c1b4d55-7bc3a1c5ef.zip/node_modules/vite/dist/node/index.js";
import react from "file:///D:/PROJECT/final-toolset/moleculer-ts/.yarn/__virtual__/@vitejs-plugin-react-virtual-d92a10b26a/0/cache/@vitejs-plugin-react-npm-4.5.0-7360e2e3d4-0a1c4815fb.zip/node_modules/@vitejs/plugin-react/dist/index.mjs";
import federation from "file:///D:/PROJECT/final-toolset/moleculer-ts/.yarn/cache/@originjs-vite-plugin-federation-npm-1.4.1-ccb746d381-6342d42bfb.zip/node_modules/@originjs/vite-plugin-federation/dist/index.mjs";
import path from "path";
import { globSync } from "file:///D:/PROJECT/final-toolset/moleculer-ts/.yarn/cache/glob-npm-11.0.2-cd5db3a299-5350153024.zip/node_modules/glob/dist/esm/index.js";

// src/vhosts.json
var vhosts_default = {
  "app-public": {
    port: 3001,
    remote: "publicApp"
  },
  "app-demo": {
    port: 3002,
    remote: "demoApp"
  },
  api: {
    port: 3e3,
    remote: "/api"
  }
};

// vite.config.mts
var __vite_injected_original_dirname = "D:\\PROJECT\\final-toolset\\moleculer-ts";
var APP = process.env.VITE_APP;
var CDN = process.env.VITE_CDN ?? "";
var PORT = APP ? vhosts_default[APP].port : "3001";
var exposes = globSync(
  `src/${APP}/**/*.federated.tsx`
).map((file) => {
  const [name] = path.basename(file).split(".");
  const parts = file.split(path.sep);
  const url = "./" + parts.join("/");
  return { name, url };
}).reduce((acc, { name, url }) => ({
  ...acc,
  [name]: url
}), {});
var remotes = globSync(
  `src/**/*.federated.tsx`
).map((file) => {
  const parts = file.split(path.sep);
  return parts[1];
}).filter((name) => name !== APP).reduce((acc, app) => {
  return {
    ...acc,
    [vhosts_default[app].remote]: CDN + `/${app}/lib.js`
  };
}, {});
var proxyConfig = {
  [vhosts_default["api"].remote]: `http://localhost:${vhosts_default["api"].port}`
};
var serverConfig = {
  host: true,
  port: PORT,
  cors: true,
  proxy: proxyConfig
};
var vite_config_default = defineConfig({
  resolve: {
    alias: {
      "@": path.resolve(__vite_injected_original_dirname, "./src")
    }
  },
  plugins: [
    react(),
    federation({
      name: "lib",
      filename: "lib.js",
      exposes,
      remotes,
      shared: ["react", "react-dom"]
    })
  ],
  build: {
    outDir: "dist/" + process.env.VITE_APP,
    target: "esnext"
  },
  server: serverConfig,
  preview: serverConfig
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcubXRzIiwgInNyYy92aG9zdHMuanNvbiJdLAogICJzb3VyY2VSb290IjogIkQ6XFxQUk9KRUNUXFxmaW5hbC10b29sc2V0XFxtb2xlY3VsZXItdHNcXCIsCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiRDpcXFxcUFJPSkVDVFxcXFxmaW5hbC10b29sc2V0XFxcXG1vbGVjdWxlci10c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiRDpcXFxcUFJPSkVDVFxcXFxmaW5hbC10b29sc2V0XFxcXG1vbGVjdWxlci10c1xcXFx2aXRlLmNvbmZpZy5tdHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL0Q6L1BST0pFQ1QvZmluYWwtdG9vbHNldC9tb2xlY3VsZXItdHMvdml0ZS5jb25maWcubXRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSAndml0ZSc7XG5pbXBvcnQgcmVhY3QgZnJvbSAnQHZpdGVqcy9wbHVnaW4tcmVhY3QnO1xuaW1wb3J0IGZlZGVyYXRpb24gZnJvbSBcIkBvcmlnaW5qcy92aXRlLXBsdWdpbi1mZWRlcmF0aW9uXCI7XG5pbXBvcnQgcGF0aCBmcm9tIFwicGF0aFwiO1xuaW1wb3J0IHsgZ2xvYlN5bmMgfSBmcm9tIFwiZ2xvYlwiO1xuXG5pbXBvcnQgdmhvc3RDb25maWcgZnJvbSBcIi4vc3JjL3Zob3N0cy5qc29uXCI7XG5cbmNvbnN0IEFQUCA9IHByb2Nlc3MuZW52LlZJVEVfQVBQO1xuY29uc3QgQ0ROID0gcHJvY2Vzcy5lbnYuVklURV9DRE4gPz8gJyc7XG5jb25zdCBQT1JUID0gQVBQID8gdmhvc3RDb25maWdbQVBQXS5wb3J0IDogJzMwMDEnO1xuXG5jb25zdCBleHBvc2VzID0gZ2xvYlN5bmMoXG4gIGBzcmMvJHtBUFB9LyoqLyouZmVkZXJhdGVkLnRzeGBcbilcbiAgLm1hcChmaWxlID0+IHtcbiAgICBjb25zdCBbbmFtZV0gPSBwYXRoLmJhc2VuYW1lKGZpbGUpLnNwbGl0KCcuJyk7XG4gICAgY29uc3QgcGFydHMgPSBmaWxlLnNwbGl0KHBhdGguc2VwKTtcbiAgICBjb25zdCB1cmwgPSAnLi8nICsgcGFydHMuam9pbignLycpO1xuICAgIHJldHVybiB7IG5hbWUsIHVybCB9XG4gIH0pXG4gIC5yZWR1Y2UoKGFjYywgeyBuYW1lLCB1cmwgfSkgPT4gKHtcbiAgICAuLi5hY2MsXG4gICAgW25hbWVdOiB1cmxcbiAgfSksIHt9KTtcblxuY29uc3QgcmVtb3RlcyA9IGdsb2JTeW5jKFxuICBgc3JjLyoqLyouZmVkZXJhdGVkLnRzeGBcbilcbiAgLm1hcChmaWxlID0+IHtcbiAgICBjb25zdCBwYXJ0cyA9IGZpbGUuc3BsaXQocGF0aC5zZXApO1xuICAgIHJldHVybiBwYXJ0c1sxXTtcbiAgfSlcbiAgLmZpbHRlcihuYW1lID0+IG5hbWUgIT09IEFQUClcbiAgLnJlZHVjZSgoYWNjLCBhcHApID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uYWNjLFxuICAgICAgW3Zob3N0Q29uZmlnW2FwcF0ucmVtb3RlXTogQ0ROICsgYC8ke2FwcH0vbGliLmpzYFxuICAgIH1cbiAgfSwge30pO1xuXG5jb25zdCBwcm94eUNvbmZpZyA9IHtcbiAgW3Zob3N0Q29uZmlnWydhcGknXS5yZW1vdGVdOiBgaHR0cDovL2xvY2FsaG9zdDoke3Zob3N0Q29uZmlnWydhcGknXS5wb3J0fWAsXG59O1xuXG5jb25zdCBzZXJ2ZXJDb25maWcgPSB7XG4gIGhvc3Q6IHRydWUsXG4gIHBvcnQ6IFBPUlQsXG4gIGNvcnM6IHRydWUsXG4gIHByb3h5OiBwcm94eUNvbmZpZyxcbn07XG5cbi8vIGh0dHBzOi8vdml0ZS5kZXYvY29uZmlnL1xuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcblx0cmVzb2x2ZToge1xuXHRcdGFsaWFzOiB7XG5cdFx0XHRcIkBcIjogcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgXCIuL3NyY1wiKVxuXHRcdH0sXG5cdH0sXG5cdHBsdWdpbnM6IFtcblx0XHRyZWFjdCgpLFxuICAgIGZlZGVyYXRpb24oe1xuICAgICAgbmFtZTogXCJsaWJcIixcbiAgICAgIGZpbGVuYW1lOiBcImxpYi5qc1wiLFxuICAgICAgZXhwb3NlcyxcbiAgICAgIHJlbW90ZXMsXG4gICAgICBzaGFyZWQ6IFtcInJlYWN0XCIsIFwicmVhY3QtZG9tXCJdLFxuICAgIH0pLFxuXHRdLFxuICBidWlsZDoge1xuICAgIG91dERpcjogXCJkaXN0L1wiICsgcHJvY2Vzcy5lbnYuVklURV9BUFAsXG4gICAgdGFyZ2V0OiBcImVzbmV4dFwiLFxuICB9LFxuICBzZXJ2ZXI6IHNlcnZlckNvbmZpZyxcbiAgcHJldmlldzogc2VydmVyQ29uZmlnXG59KTtcbiIsICJ7XG4gIFwiYXBwLXB1YmxpY1wiOiB7XG4gICAgXCJwb3J0XCI6IDMwMDEsXG4gICAgXCJyZW1vdGVcIjogXCJwdWJsaWNBcHBcIlxuICB9LFxuICBcImFwcC1kZW1vXCI6IHtcbiAgICBcInBvcnRcIjogMzAwMixcbiAgICBcInJlbW90ZVwiOiBcImRlbW9BcHBcIlxuICB9LFxuICBcImFwaVwiOiB7XG4gICAgXCJwb3J0XCI6IDMwMDAsXG4gICAgXCJyZW1vdGVcIjogXCIvYXBpXCJcbiAgfVxufVxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUEyUyxTQUFTLG9CQUFvQjtBQUN4VSxPQUFPLFdBQVc7QUFDbEIsT0FBTyxnQkFBZ0I7QUFDdkIsT0FBTyxVQUFVO0FBQ2pCLFNBQVMsZ0JBQWdCOzs7QUNKekI7QUFBQSxFQUNFLGNBQWM7QUFBQSxJQUNaLE1BQVE7QUFBQSxJQUNSLFFBQVU7QUFBQSxFQUNaO0FBQUEsRUFDQSxZQUFZO0FBQUEsSUFDVixNQUFRO0FBQUEsSUFDUixRQUFVO0FBQUEsRUFDWjtBQUFBLEVBQ0EsS0FBTztBQUFBLElBQ0wsTUFBUTtBQUFBLElBQ1IsUUFBVTtBQUFBLEVBQ1o7QUFDRjs7O0FEYkEsSUFBTSxtQ0FBbUM7QUFRekMsSUFBTSxNQUFNLFFBQVEsSUFBSTtBQUN4QixJQUFNLE1BQU0sUUFBUSxJQUFJLFlBQVk7QUFDcEMsSUFBTSxPQUFPLE1BQU0sZUFBWSxHQUFHLEVBQUUsT0FBTztBQUUzQyxJQUFNLFVBQVU7QUFBQSxFQUNkLE9BQU8sR0FBRztBQUNaLEVBQ0csSUFBSSxVQUFRO0FBQ1gsUUFBTSxDQUFDLElBQUksSUFBSSxLQUFLLFNBQVMsSUFBSSxFQUFFLE1BQU0sR0FBRztBQUM1QyxRQUFNLFFBQVEsS0FBSyxNQUFNLEtBQUssR0FBRztBQUNqQyxRQUFNLE1BQU0sT0FBTyxNQUFNLEtBQUssR0FBRztBQUNqQyxTQUFPLEVBQUUsTUFBTSxJQUFJO0FBQ3JCLENBQUMsRUFDQSxPQUFPLENBQUMsS0FBSyxFQUFFLE1BQU0sSUFBSSxPQUFPO0FBQUEsRUFDL0IsR0FBRztBQUFBLEVBQ0gsQ0FBQyxJQUFJLEdBQUc7QUFDVixJQUFJLENBQUMsQ0FBQztBQUVSLElBQU0sVUFBVTtBQUFBLEVBQ2Q7QUFDRixFQUNHLElBQUksVUFBUTtBQUNYLFFBQU0sUUFBUSxLQUFLLE1BQU0sS0FBSyxHQUFHO0FBQ2pDLFNBQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsRUFDQSxPQUFPLFVBQVEsU0FBUyxHQUFHLEVBQzNCLE9BQU8sQ0FBQyxLQUFLLFFBQVE7QUFDcEIsU0FBTztBQUFBLElBQ0wsR0FBRztBQUFBLElBQ0gsQ0FBQyxlQUFZLEdBQUcsRUFBRSxNQUFNLEdBQUcsTUFBTSxJQUFJLEdBQUc7QUFBQSxFQUMxQztBQUNGLEdBQUcsQ0FBQyxDQUFDO0FBRVAsSUFBTSxjQUFjO0FBQUEsRUFDbEIsQ0FBQyxlQUFZLEtBQUssRUFBRSxNQUFNLEdBQUcsb0JBQW9CLGVBQVksS0FBSyxFQUFFLElBQUk7QUFDMUU7QUFFQSxJQUFNLGVBQWU7QUFBQSxFQUNuQixNQUFNO0FBQUEsRUFDTixNQUFNO0FBQUEsRUFDTixNQUFNO0FBQUEsRUFDTixPQUFPO0FBQ1Q7QUFHQSxJQUFPLHNCQUFRLGFBQWE7QUFBQSxFQUMzQixTQUFTO0FBQUEsSUFDUixPQUFPO0FBQUEsTUFDTixLQUFLLEtBQUssUUFBUSxrQ0FBVyxPQUFPO0FBQUEsSUFDckM7QUFBQSxFQUNEO0FBQUEsRUFDQSxTQUFTO0FBQUEsSUFDUixNQUFNO0FBQUEsSUFDSixXQUFXO0FBQUEsTUFDVCxNQUFNO0FBQUEsTUFDTixVQUFVO0FBQUEsTUFDVjtBQUFBLE1BQ0E7QUFBQSxNQUNBLFFBQVEsQ0FBQyxTQUFTLFdBQVc7QUFBQSxJQUMvQixDQUFDO0FBQUEsRUFDSjtBQUFBLEVBQ0MsT0FBTztBQUFBLElBQ0wsUUFBUSxVQUFVLFFBQVEsSUFBSTtBQUFBLElBQzlCLFFBQVE7QUFBQSxFQUNWO0FBQUEsRUFDQSxRQUFRO0FBQUEsRUFDUixTQUFTO0FBQ1gsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
